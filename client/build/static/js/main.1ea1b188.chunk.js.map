{"version":3,"sources":["components/Header.js","MovieContext.js","components/Overview.js","components/Movies.js","components/MovieList.js","components/Search.js","App.js","index.js"],"names":["Header","className","class","Component","MovieContext","React","createContext","MovieProvider","state","search","movies","isloading","event","preventDefault","this","fetchMovie","target","name","value","setState","isLoading","console","log","data","obj","JSON","stringify","fetch","method","headers","body","then","response","json","concat","catch","err","map","movie","index","Provider","bind","searchMovie","handleChange","props","children","Overview","Poster","Genre","Actors","Plot","Awards","Writer","Released","Language","useState","isOpen","setIsOpen","Button","color","onClick","style","marginBottom","Collapse","Card","CardBody","Movies","Title","Ratings","Runtime","Jumbotron","src","width","height","alt","Value","key","imdbID","MovieList","useContext","item","Search","context","onSubmit","type","onChange","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ea1b188.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <table className=\"navBar\">\r\n            <tbody>\r\n            <tr>\r\n                <td className=\"head\"> <i class=\"fa fa-search logo\"></i><h1>Movies</h1></td>\r\n            </tr>\r\n            <tr>\r\n                \r\n            </tr>\r\n            </tbody>\r\n         </table>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\n// context\r\n\r\n export const MovieContext = React.createContext()\r\n  \r\nexport class MovieProvider extends Component {\r\n\r\n    state ={\r\n        search:\"\",\r\n        movies:[],\r\n        isloading:false\r\n      }\r\n\r\n    searchMovie(event){\r\n        event.preventDefault()\r\n        this.fetchMovie()\r\n       \r\n    }\r\n\r\n    handleChange(event){\r\n   const {name,value} = event.target\r\n    this.setState({ [name] : value})\r\n    }\r\n\r\n    fetchMovie(){\r\n        this.setState({isLoading :true})\r\n\r\n        \r\n        if(this.state.search === \" \"){\r\n            console.log(\"ok\")\r\n            return \"please you need to type in a movie\"\r\n            \r\n        }\r\n         \r\n\r\n        \r\n        const data = {\r\n            name: this.state.search\r\n        }\r\n        //   if(data)\r\n        const obj = JSON.stringify(data)\r\n        \r\n  console.log(obj)\r\n        fetch(\"api/movies\",{\r\n            method:\"POST\",\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'content-type': 'application/json'\r\n            },\r\n            body:obj \r\n            })\r\n            .then(response => response.json())\r\n            .then( data =>{\r\n               console.log(data)\r\n               this.setState({movies:this.state.movies.concat(data.data)})\r\n               console.log(this.state.movies)\r\n           }).catch( err =>{console.log(err)})\r\n       }\r\n      render() {\r\n  console.log(this.state.movies)\r\n          const  movies = this.state.movies.map( (movie,index) =>{\r\n             console.log(movies)\r\n          })\r\n    }\r\n    render() {\r\n        return (\r\n            <MovieContext.Provider value={{\r\n                ...this.state,\r\n                fetchMovie:this.fetchMovie.bind(this),\r\n                searchMovie :this.searchMovie.bind(this),\r\n                handleChange :this.handleChange.bind(this)\r\n            }}>\r\n                \r\n                {this.props.children}\r\n            </MovieContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\r\n\r\n  const  Overview = ({ movie }) => {\r\n\r\n    const {Poster,Genre,Actors,Plot,Awards,Writer,Released, Language} = movie\r\n      \r\n    console.log(Poster,Genre,Actors)\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n     <Button color=\"primary\" onClick={toggle} style={{ marginBottom: '1rem' }}>View More</Button>\r\n      <Collapse isOpen={isOpen}>\r\n        <Card>\r\n          <CardBody>\r\n           <div className=\"summary\">Summary</div>\r\n            <div className=\"plot\">{Plot} <em> Written by {Writer}</em></div>\r\n             <div> <span>Award</span> : {Awards}</div>\r\n             <div> <span>Writer</span> : {Writer}</div>\r\n             <div> <span>Released</span> : {Released}</div>\r\n             <div> <span>Language</span> : {Language}</div>\r\n          </CardBody>\r\n        </Card>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Overview;\r\n\r\n// Collapse.propTypes = {\r\n//     ...Transition.propTypes, // see note below\r\n//     isOpen: PropTypes.bool,\r\n//     children: PropTypes.oneOfType([\r\n//       PropTypes.arrayOf(PropTypes.node),\r\n//       PropTypes.node\r\n//     ]),\r\n//     tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\r\n//     className: PropTypes.node,\r\n//     navbar: PropTypes.bool,\r\n//     cssModule: PropTypes.object,\r\n//     innerRef: PropTypes.object,\r\n//   };","import React from 'react'\r\nimport { Jumbotron,Button } from 'reactstrap';\r\nimport Overview from './Overview'\r\n\r\nexport default function Movies({ movie }) {\r\n\r\n    const {Poster,Genre,Title,Ratings,Runtime} = movie\r\n    console.log(movie)\r\n   \r\n    return (\r\n        \r\n        <article className=\"room\">\r\n          <Jumbotron  className=\"content\">\r\n              <div className=\"sect-content\">\r\n            <div className=\"img-container\" >\r\n                <img src={Poster} width=\"120\" height=\"100\" alt= \"single room\" />\r\n            </div>\r\n            <div className=\"\">\r\n            <p className=\"title\">Title : {Title}</p>\r\n            <p className=\"genre\">Genre : {Genre}</p>\r\n            <p className=\"runtime\">{Runtime}</p>\r\n                <p> <i className=\"fa fa-star rating\"> </i> <span className=\"\">{Ratings[0].Value}</span></p> \r\n      \r\n            </div> \r\n            <div className=\"over-view\">\r\n\r\n            </div>\r\n            </div>\r\n            <Overview key={movie.imdbID} movie={movie} />\r\n          </Jumbotron>\r\n          \r\n             \r\n            \r\n          \r\n        </article>\r\n        \r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { MovieContext } from '../MovieContext'\r\nimport Movies from './Movies'\r\n\r\nexport default function MovieList() {\r\n    const context = useContext(MovieContext)\r\n    const {movies} = context\r\n    // const movie = props \r\n    console.log(movies) \r\n    return (\r\n        <section className=\"movie-list\">\r\n            <div className=\"room-list-center\">\r\n             {movies.map((item) =>{\r\n                 return <Movies key={item.imdbID} movie={item} />\r\n             })}\r\n            </div>\r\n            \r\n        </section>\r\n    ) \r\n}\r\n","import React, {useContext} from 'react'\r\nimport { MovieContext } from '../MovieContext'\r\nimport MovieList from './MovieList'\r\n\r\n\r\nexport default function Search() {\r\n    const context = useContext(MovieContext)\r\n\r\n    const {handleChange, searchMovie} = context\r\n    return (\r\n        <div className=\"container\">\r\n            <form className=\"form-group\" onSubmit={ searchMovie }>\r\n                    <div className=\"form-field\">\r\n                        <input type=\"text\" name=\"search\" onChange={handleChange} className=\"form-control\" placeholder=\"Search Your Movies Here\" />\r\n                        <button className=\"search\"><i class=\"fa fa-search\"></i></button>\r\n                    </div> \r\n                </form>\r\n               \r\n               <MovieList />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header'\nimport Search from './components/Search'\n import {MovieProvider} from './MovieContext'\n\nfunction App() {\n\n\n  return (\n    <MovieProvider>\n    <div className=\"App \">\n      <Header />\n      <Search />\n    </div> \n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}